<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://www.kinoma.com/fskin/1" href="x-id://model">
	<assets>
		<import href="kbookAssets.xml"/>

		<!-- PRS+ stuff -->
		<import href="../prsp/prspAssets.xml"/>
		<texture href="kBookAssets.png">
			<cutout id="whiteBox" x="630" y="0" width="70" height="70" columns="0" lines="0" />
			<cutout id="blackBox" x="351" y="0" width="35" height="70" columns="0" lines="0" />
			<cutout id="greyBox" x="500" y="75" width="35" height="70" columns="0" lines="0" />
			<cutout id="greyLine" x="70" y="138" width="35" height="2" columns="0" lines="0" />
			<cutout id="empty" x="0" y="0" width="0" height="0" />
			
			<cutout id="blackBorder-tl" x="782" y="110" width="6" height="5"  columns="0" lines="0" />
			<cutout id="blackBorder-tc" x="788" y="110" width="30" height="5"  columns="0" lines="0" />
			<cutout id="blackBorder-tr" x="822" y="110" width="6" height="5"  columns="0" lines="0" />
			
			<cutout id="blackBorder-cl" x="782" y="115" width="3" height="70"  columns="0" lines="0" />
			
			<cutout id="blackBorder-bl" x="782" y="342" width="6" height="5"  columns="0" lines="0" />
			<cutout id="blackBorder-bc" x="788" y="342" width="30" height="5"  columns="0" lines="0" />
			<cutout id="blackBorder-br" x="822" y="342" width="6" height="5"  columns="0" lines="0" />
			
			<cutout id="markIcon" x="782" y="376" width="21" height="21" />
		</texture>
		
		<style id="popupText" halign="left" valign="top" top="8" left="10" size="30" style="bold"/>
		<style id="popupTextWhite" halign="left" valign="top" top="8" left="10" size="30" style="bold" color="#FFFFFF"/>
		
		<skin id="popup"
			cutouts="blackBorder-tl,blackBorder-tc,blackBorder-tr,blackBorder-cl,whiteBox,blackBorder-cl,blackBorder-bl,blackBorder-bc,blackBorder-br"
		/>
		<skin id="popupText"
			styles="popupText,popupText,popupText,popupText"
			cutouts="empty,greyLine,empty,empty,empty,empty,empty,greyLine,empty"
		/>
		<skin id="popupIndicator"
			styles="popupText,popupText,popupText,popupText"
			cutouts="empty,empty,empty,empty,greyBox,empty,empty,empty,empty"
		/>
		<skin id="popupIndicatorSel"
			styles="popupTextWhite,popupTextWhite,popupTextWhite,popupTextWhite"
			cutouts="empty,empty,empty,empty,blackBox,empty,empty,empty,empty"
		/>
		<!-- End of PRS+ stuff -->

	</assets>
	<code>
		<function id="afterModal" params="group">
			group.show(false);
			this.modal--;
			if (this.modal &lt; 0)
				debugger
			trace("afterModal: this.modal=" + this.modal + "\n");
			if (!this.modal) {
				this.focus(true);
				
				this.MENU_GROUP.MENU.enable(true);
				this.PAGE_GROUP.PAGE.enable(true);
				this.SONG_GROUP.SONG.enable(true);
				this.PICTURE_GROUP.PICTURE.enable(true);
				this.DEMO_PICTURE_GROUP.DEMO_PICTURE.enable(true);
				this.SETTING_GROUP.SETTING.enable(true);
				this.INFO_GROUP.INFO.enable(true);
				this.ABOUT_GROUP.ABOUT.enable(true);
				this.AUTORUN_GROUP.AUTORUN.enable(true);
				this.SOFT_RESET_GROUP.SOFT_RESET.enable(true);
				this.DEMO_MODE_GROUP.DEMO_MODE.enable(true);
				this.HARD_RESET_GROUP.HARD_RESET.enable(true);
				this.FORMAT_DEVICE_GROUP.FORMAT_DEVICE.enable(true);
				this.REMOVE_ALL_BOOKMARKS_GROUP.REMOVE_ALL_BOOKMARKS.enable(true);
				this.CLEAR_HISTORY_GROUP.CLEAR_HISTORY.enable(true);
				this.DELETE_BOOK_GROUP.DELETE_BOOK.enable(true);
				this.DELETE_BOOK_GROUP_ERR.DELETE_BOOK_ERR.enable(true);
				this.DEVICE_SHUTDOWN_GROUP.DEVICE_SHUTDOWN.enable(true);
				
				var target;
				trace("afterModal: STATE=" + this.getVariable("STATE") + "\n");
				switch (this.getVariable("STATE")) {
				case "MENU": target = this.MENU_GROUP.MENU; break;
				case "PAGE": target = this.PAGE_GROUP.PAGE; break;
				case "SONG": target = this.SONG_GROUP.SONG; break;
				case "PICTURE": target = this.PICTURE_GROUP.PICTURE; break;
				case "DEMO_PICTURE": target = this.DEMO_PICTURE_GROUP.DEMO_PICTURE; break;
				case "SETTING": target = this.SETTING_GROUP.SETTING; break;
				case "INFO": target = this.INFO_GROUP.INFO; break;
				case "ABOUT": target = this.ABOUT_GROUP.ABOUT; break;
				case "AUTORUN": target = this.AUTORUN_GROUP.AUTORUN; break;
				case "SOFT_RESET": target = this.SOFT_RESET_GROUP.SOFT_RESET; break;
				case "DEMO_MODE": target = this.DEMO_MODE_GROUP.DEMO_MODE; break;
				case "HARD_RESET": target = this.HARD_RESET_GROUP.HARD_RESET; break;
				case "FORMAT_DEVICE": target = this.FORMAT_DEVICE_GROUP.FORMAT_DEVICE; break;
				case "REMOVE_ALL_BOOKMARKS": target = this.REMOVE_ALL_BOOKMARKS_GROUP.REMOVE_ALL_BOOKMARKS; break;
				case "CLEAR_HISTORY": target = this.CLEAR_HISTORY_GROUP.CLEAR_HISTORY; break;
				case "DELETE_BOOK": target = this.DELETE_BOOK_GROUP.DELETE_BOOK; debugger; break;
				case "DELETE_BOOK_ERR": target = this.DELETE_BOOK_GROUP_ERR.DELETE_BOOK_ERR; debugger; break;
				case "DEVICE_SHUTDOWN": target = this.DEVICE_SHUTDOWN_GROUP.DEVICE_SHUTDOWN; break;
				}
				target.focus(true);
			}
			else if (this.COLD_BOOT_WIZARD_GROUP.isShown()) {
				this.COLD_BOOT_WIZARD_GROUP.focus(true);
				this.COLD_BOOT_WIZARD_GROUP.showPage();
			}
			else if (this.FORMAT_GROUP.isShown())
				this.FORMAT_GROUP.focus(true);
			else if (this.DISK_GROUP.isShown())
				this.DISK_GROUP.focus(true);
			else if (this.SHUTDOWN_GROUP.isShown())
				this.SHUTDOWN_GROUP.focus(true);
			else if (this.LOW_BATTERY_GROUP.isShown())
				this.LOW_BATTERY_GROUP.focus(true);
			else if (this.INVALID_FORMAT_GROUP.isShown())
				this.INVALID_FORMAT_GROUP.focus(true);
			else if (this.GOTO_GROUP.isShown())
				this.GOTO_GROUP.focus(true);
			else if (this.DELETE_BOOKMARK_GROUP.isShown())
				this.DELETE_BOOKMARK_GROUP.focus(true);
		</function>
		<function id="beforeModal" params="group">
			if (!this.modal) {
				trace("beforeModal: STATE=" + this.getVariable("STATE") + "\n");
				this.focus(true);
				this.MENU_GROUP.MENU.enable(false);
				this.PAGE_GROUP.PAGE.enable(false);
				this.SONG_GROUP.SONG.enable(false);
				this.PICTURE_GROUP.PICTURE.enable(false);
				this.DEMO_PICTURE_GROUP.DEMO_PICTURE.enable(false);
				this.SETTING_GROUP.SETTING.enable(false);
				this.INFO_GROUP.INFO.enable(false);
				this.ABOUT_GROUP.ABOUT.enable(false);
				this.AUTORUN_GROUP.AUTORUN.enable(false);
				this.SOFT_RESET_GROUP.SOFT_RESET.enable(false);
				this.DEMO_MODE_GROUP.DEMO_MODE.enable(false);
				this.HARD_RESET_GROUP.HARD_RESET.enable(false);
				this.FORMAT_DEVICE_GROUP.FORMAT_DEVICE.enable(false);
				this.REMOVE_ALL_BOOKMARKS_GROUP.REMOVE_ALL_BOOKMARKS.enable(false);
				this.CLEAR_HISTORY_GROUP.CLEAR_HISTORY.enable(false);
				this.DELETE_BOOK_GROUP.DELETE_BOOK.enable(false);
				this.DELETE_BOOK_GROUP_ERR.DELETE_BOOK_ERR.enable(false);
				this.DEVICE_SHUTDOWN_GROUP.DEVICE_SHUTDOWN.enable(false);
			}
			this.modal++;
			trace("beforeModal: this.modal=" + this.modal + "\n");
			group.show(true);
			group.focus(true);
			if ("onModal" in group)
				group.onModal()
		</function>
		<function id="clearModal" params="">
			var target=null;
			if (this.modal>0) {
				trace("CLEARMODAL called\n");
				// Determine which, if any, modal UI group is currently shown.
				// Clear modal when it is GOTO_GROUP only!
				if (this.GOTO_GROUP.isShown()) {
					target=this.GOTO_GROUP;
					target.show(false);
					this.modal--;
					if (!this.modal) {
						//this.focus(true);
				
						this.MENU_GROUP.MENU.enable(true);
						this.PAGE_GROUP.PAGE.enable(true);
						this.SONG_GROUP.SONG.enable(true);
						this.PICTURE_GROUP.PICTURE.enable(true);
						this.DEMO_PICTURE_GROUP.DEMO_PICTURE.enable(true);
						this.SETTING_GROUP.SETTING.enable(true);
						this.INFO_GROUP.INFO.enable(true);
						this.ABOUT_GROUP.ABOUT.enable(true);
						this.AUTORUN_GROUP.AUTORUN.enable(true);
						this.SOFT_RESET_GROUP.SOFT_RESET.enable(true);
						this.DEMO_MODE_GROUP.DEMO_MODE.enable(true);
						this.HARD_RESET_GROUP.HARD_RESET.enable(true);
						this.FORMAT_DEVICE_GROUP.FORMAT_DEVICE.enable(true);
						this.REMOVE_ALL_BOOKMARKS_GROUP.REMOVE_ALL_BOOKMARKS.enable(true);
						this.CLEAR_HISTORY_GROUP.CLEAR_HISTORY.enable(true);
						this.DELETE_BOOK_GROUP.DELETE_BOOK.enable(true);
						this.DELETE_BOOK_GROUP_ERR.DELETE_BOOK_ERR.enable(true);
						this.DEVICE_SHUTDOWN_GROUP.DEVICE_SHUTDOWN.enable(true);

						switch (this.getVariable("STATE")) {
						case "MENU": target = this.MENU_GROUP.MENU; break;
						case "PAGE": target = this.PAGE_GROUP.PAGE; break;
						case "SONG": target = this.SONG_GROUP.SONG; break;
						case "PICTURE": target = this.PICTURE_GROUP.PICTURE; break;
						case "DEMO_PICTURE": target = this.DEMO_PICTURE_GROUP.DEMO_PICTURE; break;
						case "SETTING": target = this.SETTING_GROUP.SETTING; break;
						case "INFO": target = this.INFO_GROUP.INFO; break;
						case "ABOUT": target = this.ABOUT_GROUP.ABOUT; break;
						case "AUTORUN": target = this.AUTORUN_GROUP.AUTORUN; break;
						case "SOFT_RESET": target = this.SOFT_RESET_GROUP.SOFT_RESET; break;
						case "DEMO_MODE": target = this.DEMO_MODE_GROUP.DEMO_MODE; break;
						case "HARD_RESET": target = this.HARD_RESET_GROUP.HARD_RESET; break;
						case "FORMAT_DEVICE": target = this.FORMAT_DEVICE_GROUP.FORMAT_DEVICE; break;
						case "REMOVE_ALL_BOOKMARKS": target = this.REMOVE_ALL_BOOKMARKS_GROUP.REMOVE_ALL_BOOKMARKS; break;
						case "CLEAR_HISTORY": target = this.CLEAR_HISTORY_GROUP.CLEAR_HISTORY; break;
						case "DELETE_BOOK": target = this.DELETE_BOOK_GROUP.DELETE_BOOK; break;
						case "DELETE_BOOK_ERR": target = this.DELETE_BOOK_GROUP_ERR.DELETE_BOOK_ERR; break;
						case "DEVICE_SHUTDOWN": target = this.DEVICE_SHUTDOWN_GROUP.DEVICE_SHUTDOWN; break;
						}
					} else {
						target=null
					}
				}
				if (target)
					target.focus(true);
				else if (this.COLD_BOOT_WIZARD_GROUP.isShown()) {
					this.COLD_BOOT_WIZARD_GROUP.focus(true);
					this.COLD_BOOT_WIZARD_GROUP.showPage();
				}
				else if (this.FORMAT_GROUP.isShown())
					this.FORMAT_GROUP.focus(true);
				else if (this.DISK_GROUP.isShown())
					this.DISK_GROUP.focus(true);
				else if (this.SHUTDOWN_GROUP.isShown())
					this.SHUTDOWN_GROUP.focus(true);
				else if (this.LOW_BATTERY_GROUP.isShown())
					this.LOW_BATTERY_GROUP.focus(true);
				else if (this.INVALID_FORMAT_GROUP.isShown())
					this.INVALID_FORMAT_GROUP.focus(true);
				else if (this.GOTO_GROUP.isShown())
					this.GOTO_GROUP.focus(true);
				else if (this.DELETE_BOOKMARK_GROUP.isShown())
					this.DELETE_BOOKMARK_GROUP.focus(true);
			}
		</function>
		<function id="beginFullScreen">
			this.STATUS_GROUP.show(false);
		</function>
		<function id="construct">
			this.modal = 0;
			this.state = undefined;
			this.control = undefined;
			this.volumeBlink = undefined;
		</function>
		<function id="doQuit">
			this.timer = new Timer;
			this.timer.onCallback  = this.doQuitCallback;
			this.timer.device  = this.getDevice();
			this.timer.window  = this.container.getWindow();
			this.timer.schedule(2000);
			this.timer.device.doProcessing(100);
		</function>
		<function id="doQuitCallback">
			this.window.doQuit();
		</function>
		<function id="doResume">
			this.getDevice().doneResume();
			this.getModel().resume();
			
			// This code doesn't seem to have any purpose.  The focus doesn't change when we suspend, 
			// so there is no need to modify it when resuming.
			// This should fix Snowboard #97 and #167 - kc 3/10/09
// 			if (this.modal) {
// 				if (this.COLD_BOOT_WIZARD_GROUP.isShown())
// 					this.COLD_BOOT_WIZARD_GROUP.focus(true);
// 				else if (this.FORMAT_GROUP.isShown())
// 					this.FORMAT_GROUP.focus(true);
// 				else if (this.DISK_GROUP.isShown())
// 					this.DISK_GROUP.focus(true);
// 				else if (this.SHUTDOWN_GROUP.isShown())
// 					this.SHUTDOWN_GROUP.focus(true);
// 				else if (this.LOW_BATTERY_GROUP.isShown())
// 					this.LOW_BATTERY_GROUP.focus(true);
// 				else if (this.INVALID_FORMAT_GROUP.isShown())
// 					this.INVALID_FORMAT_GROUP.focus(true);
// 				else if (this.GOTO_GROUP.isShown())
// 					this.GOTO_GROUP.focus(true);
// 				else if (this.DELETE_BOOKMARK_GROUP.isShown())
// 					this.DELETE_BOOKMARK_GROUP.focus(true);
// 			}
		</function>
		<function id="doSuspend">
			this.getModel().suspend();
			this.getDevice().doneSuspend();
		</function>
		<function id="endFullScreen">
			this.STATUS_GROUP.show(true);
		</function>
		<function id="modelChanged">
			arguments.callee.grammar.call(this);
			var	state =	this.getVariable("STATE");
			var	target;
			if (this.state != state) {
				this.focus(true)
				this.MENU_GROUP.show(false)
				this.PAGE_GROUP.show(false)
				this.SONG_GROUP.show(false)
				this.PICTURE_GROUP.show(false)
				if( this.DEMO_PICTURE_GROUP.isShown()){
					this.endFullScreen()
				}
				this.DEMO_PICTURE_GROUP.show(false)
				this.SETTING_GROUP.show(false)
				this.INFO_GROUP.show(false)
				this.ABOUT_GROUP.show(false)
				this.AUTORUN_GROUP.show(false)
				this.SOFT_RESET_GROUP.show(false)
				this.DEMO_MODE_GROUP.show(false)
				this.HARD_RESET_GROUP.show(false)
				this.FORMAT_DEVICE_GROUP.show(false)
				this.REMOVE_ALL_BOOKMARKS_GROUP.show(false)
				this.CLEAR_HISTORY_GROUP.show(false)
				this.DELETE_BOOK_GROUP.show(false)
				this.DELETE_BOOK_GROUP_ERR.show(false)
				this.DEVICE_SHUTDOWN_GROUP.show(false)
				switch(state) {
				case "MENU":
					this.MENU_GROUP.show(true)
					target = this.MENU_GROUP.MENU
					break
				case "PAGE":
					this.PAGE_GROUP.show(true)
					target = this.PAGE_GROUP.PAGE
					break
				case "SONG":
					this.SONG_GROUP.show(true)
					target = this.SONG_GROUP.SONG
					break
				case "PICTURE":
					this.PICTURE_GROUP.show(true)
					target = this.PICTURE_GROUP.PICTURE
					break
				case "DEMO_PICTURE":
					this.beginFullScreen()
					//for GOTO_GROUP modal
					this.clearModal()
					//for DELETE_BOOKMARK_GROUP modal
					if(this.DELETE_BOOKMARK_GROUP.isShown()){
						this.afterModal(this.DELETE_BOOKMARK_GROUP)
					}
					this.DEMO_PICTURE_GROUP.show(true)
					target = this.DEMO_PICTURE_GROUP.DEMO_PICTURE
					break
				case "SETTING":
					this.SETTING_GROUP.show(true)
					target = this.SETTING_GROUP.SETTING
					break
				case "INFO":
					this.INFO_GROUP.show(true)
					target = this.INFO_GROUP.INFO
					break
				case "ABOUT":
					this.ABOUT_GROUP.show(true)
					target = this.ABOUT_GROUP.ABOUT
					break
				case "AUTORUN":
					this.AUTORUN_GROUP.show(true)
					target = this.AUTORUN_GROUP.AUTORUN;
					break
				case "SOFT_RESET":
					this.SOFT_RESET_GROUP.show(true)
					target = this.SOFT_RESET_GROUP.SOFT_RESET
					break
				case "DEMO_MODE":
					this.DEMO_MODE_GROUP.show(true)
					target = this.DEMO_MODE_GROUP.DEMO_MODE
					break
				case "HARD_RESET":
					this.HARD_RESET_GROUP.show(true)
					target = this.HARD_RESET_GROUP.HARD_RESET
					break
				case "FORMAT_DEVICE":
					this.FORMAT_DEVICE_GROUP.show(true)
					target = this.FORMAT_DEVICE_GROUP.FORMAT_DEVICE
					break
				case "DEVICE_SHUTDOWN":
					this.DEVICE_SHUTDOWN_GROUP.show(true)
					target = this.DEVICE_SHUTDOWN_GROUP.DEVICE_SHUTDOWN
					break
				case "REMOVE_ALL_BOOKMARKS":
					this.REMOVE_ALL_BOOKMARKS_GROUP.show(true)
					target = this.REMOVE_ALL_BOOKMARKS_GROUP.REMOVE_ALL_BOOKMARKS
					break
				case "CLEAR_HISTORY":
					this.CLEAR_HISTORY_GROUP.show(true)
					target = this.CLEAR_HISTORY_GROUP.CLEAR_HISTORY
					break
				case "DELETE_BOOK":
					this.DELETE_BOOK_GROUP.show(true)
					target = this.DELETE_BOOK_GROUP.DELETE_BOOK
					break
				case "DELETE_BOOK_ERR":
					this.DELETE_BOOK_GROUP_ERR.show(true)
					target = this.DELETE_BOOK_GROUP_ERR.DELETE_BOOK_ERR
					break
				}
				this.state = state;
				this.volumeVisibilityChanged();
				if (target &amp;&amp; target.isEnabled())
					target.focus(true)
			}
		</function>
		<function id="variableChanged" params="id, value"><![CDATA[
			arguments.callee.grammar.call(this, id, value);
			if (id == "DISK") {
				if (value) {
					this.beforeModal(this.DISK_GROUP);
					this.DISK_GROUP.WAIT.startAnimation("WAIT");
				}
				else {
					this.DISK_GROUP.WAIT.stopAnimation("WAIT");
					this.afterModal(this.DISK_GROUP);
				}
			}
			else if (id == "FORMAT") {
				if (value) {
					this.beforeModal(this.FORMAT_GROUP);
				}
				else {
					this.afterModal(this.FORMAT_GROUP);
				}
			}
			else if (id == "FORMAT_PERCENT") {
				var sprite = this.FORMAT_GROUP.FORMAT;
				var u = sprite.u + 1;
				if (u > 3)
					u = 0;
				sprite.u = u;
			}
			else if (id == "PROGRESS") {
				if (value) {
					trace("PROGRESS variable was changed (true)\n");
					this.beforeModal(this.PROGRESS_GROUP);
				}
				else {
					if (this.PROGRESS_GROUP.isShown()) {
						trace("PROGRESS variable was changed (false)\n");
						this.afterModal(this.PROGRESS_GROUP);
					}
				}
			}
			else if (id == "PROGRESS_PERCENT") {
				trace("PROGRES_PERCENT was changed\n");
				var sprite = this.PROGRESS_GROUP.PROGRESS;
				var u = sprite.u + 1;
				if (u > 3)
					u = 0;
				sprite.u = u;
			}
			else if (id == "VOLUME_BLINK") {
				if (this.volumeBlink != value) {
					this.volumeBlink = value;
					this.volumeVisibilityChanged();
				}
			}
			else if (id == "BATTERY") {
				var power = this.getVariable("POWER");
				if (!power) {
					if (value == 0) {
						this.beforeModal(this.SHUTDOWN_GROUP);
						this.doQuit();
					}
					else if ((!this.batteryWarning) && (value <= 20)) {
						this.batteryWarning = true;
						this.setVariable("LOW_BATTERY", 1);
					}
				}
			}
			else if (id == "POWER") {
				if (value) {
					var lowBattery = this.getVariable("LOW_BATTERY");
					if (lowBattery)
						this.setVariable("LOW_BATTERY", 0);
					this.batteryWarning = false;
				}
			}
			else if (id == "LOW_BATTERY") {
				if (value) {
					this.beforeModal(this.LOW_BATTERY_GROUP);
				}
				else {
					this.afterModal(this.LOW_BATTERY_GROUP);
				}
			}
			else if (id == "INVALID_FORMAT") {
				if (value) {
					this.beforeModal(this.INVALID_FORMAT_GROUP);
				}
				else {
					this.afterModal(this.INVALID_FORMAT_GROUP);
				}
			}
			else if (id == "DEVICE_SHUTDOWN") {
				if (value) {
					this.beforeModal(this.SHUTDOWN_GROUP);
					this.doQuit();
				}
			}
			else if (id == "DELETE_BOOKMARK") {
				if (value) {
					this.beforeModal(this.DELETE_BOOKMARK_GROUP);
				}
				else {
					this.afterModal(this.DELETE_BOOKMARK_GROUP);
				}
			}
			else if (id == "COLD_BOOT_WIZARD") {
				if (value) {
					this.beforeModal(this.COLD_BOOT_WIZARD_GROUP);
				}
				else {
					this.afterModal(this.COLD_BOOT_WIZARD_GROUP);
				}
			}
		]]></function>
		<function id="volumeVisibilityChanged">
			this.STATUS_GROUP.VOLUME_GROUP.show((this.state == "SONG") || (this.control == 1) || (this.volumeBlink == 1));
		</function>
	</code>
	<clock/>
	<localize path="./" kind="language"/>
	<localize path="./" kind="region"/>

	<group id="ABOUT_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<kbookAbout id="ABOUT" left="0" right="0" top="0" bottom="33">
			<records>
				<record><number name="kind" value="0"/><string name="text" value="&#169;2006-2009 Sony Corporation"/></record>
				<record><number name="kind" value="1"/><string name="text" value="Adobe, the Adobe logo, Reader and PDF are either registered trademarks or trademarks of Adobe Systems Incorporated in the United States and/or other countries."/></record>
				<record><number name="kind" value="3"/><string name="text" value="Portions of application software designed and implemented by Kinoma (www.kinoma.com). Portions Copyright &#169;2006,2007 Kinoma, Inc."/></record>
				<record><number name="kind" value="-1"/><string name="text" value="Bitstream is a registered trademark, and Dutch, Font Fusion, and Swiss are trademarks, of Bitstream, Inc."/></record>
				<record><number name="kind" value="-1"/><string name="text" value="Portions of this software are Copyright &#169;2005 The FreeType Project (www.freetype.org). All rights reserved."/></record>
				<record><number name="kind" value="-1"/><string name="text" value="This software is based in part on the work of the Independent JPEG Group."/></record>
			</records>
			<code>
				<function id="getKind">
					return 25;
				</function>
				<function id="getValue" params="record, field"><![CDATA[
					var result = arguments.callee.grammar.call(this, record, field);
					if ((record.kind == 0) && (field == "text")) {
						if(!this.getVariable("DEMO_MODE")){
							var text = "fskin:/l/strings/STR_UI_PARTS_VERSION".idToString() + this.getVariable("FIRMWARE_VERSION") + "\n"
						}else{
						// Demo Mode add string
							var text = "fskin:/l/strings/STR_UI_PARTS_VERSION".idToString() + this.getVariable("FIRMWARE_VERSION") + "fskin:/l/strings/STR_UI_MESSAGE_DEMOMODE".idToString() + "\n"
						}
						text += "fskin:/l/strings/STR_UI_PARTS_DEVICE".idToString() + this.getVariable("DEVICE_ID") + "\n";
						if (this.getVariable("STORE_STATUS"))
							text += "fskin:/l/strings/STR_UI_MESSAGE_SONYAUTHORIZEDYES".idToString() + "\n";
						else{
							var s = this.getVariable("PRODUCT_NAME");
							if (!s) {
								trace("PRODUCT_NAME is not defined!  Does /opt1/info/model exist?\n")
							}
						}
						result = text + result;
					}
					else if ((record.kind == 1) && (field == "text")) {
						var text = "\n" + "fskin:/l/strings/STR_UI_MESSAGE_ADOBEAUTHORIZEDNO".idToString()
						if (this.getVariable("ADOBE_STATUS"))
							text = "\n" + "fskin:/l/strings/STR_UI_MESSAGE_ADOBEAUTHORIZEDYES".idToString()
						result = result + text;
					}
					return result;
				]]></function>
				<function id="pageChanged">
					var c = this.countPages();
					var i = this.getPage() + 1;
					if (!c) c++;
					this.setVariable("ABOUT_INDEX_COUNT", i + "fskin:/l/strings/STR_UI_PARTS_OF".idToString() + c);
				</function>
			</code>
		</kbookAbout>
		<kbookStatus left="0" right="0" height="33" bottom="0"/>
		<kbookLabel left="150" right="150" height="30" bottom="0" align="center" variable="ABOUT_INDEX_COUNT"/>
	</group>
	
	<group id="INFO_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<kbookInfo id="INFO" left="0" right="0" top="0" bottom="33" split="200" href="x-id://infoData">
			<code>
				<function id="pageChanged">
					if (this.isShown()) {
						var c = this.countPages();
						var i = this.getPage() + 1;
						if (!c) c++;
						this.setVariable("INFO_INDEX_COUNT", i + "fskin:/l/strings/STR_UI_PARTS_OF".idToString() + c);
					}
				</function>
			</code>
		</kbookInfo>
		<kbookStatus left="0" right="0" height="33" bottom="0"/>
		<kbookLabel left="150" right="150" height="30" bottom="0" align="center" variable="INFO_INDEX_COUNT"/>
	</group>
	
	<group id="MENU_GROUP" left="0" right="0" top="0" bottom="0">
		<kbookMenu id="MENU" left="0" right="0" top="0" bottom="30" href="x-id://tableData">
			<code>
				<function id="modelChanged">
					// Fix Snowboard #155
					this.pageChanged()
				</function>
				<function id="pageChanged">
					if (this.isShown()) {
						var c = this.countPages();
						var i = this.getPage() + 1;
						if (!c) c++;
						this.setVariable("MENU_INDEX_COUNT", i + "fskin:/l/strings/STR_UI_PARTS_OF".idToString() + c);
					}
				</function>
			</code>
		</kbookMenu>
		<kbookStatus skin="kbookMenuStatus" left="0" right="0" height="33" bottom="0"/>
		<kbookLabel left="150" right="150" height="30" bottom="0" align="center" variable="MENU_INDEX_COUNT"/>
	</group>
	
	<group id="PAGE_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<keys>
			<key code="8" can="canGotoParent" do="doGotoParent"/>
		</keys>
		<code>
			<function id="doDigit" params="part"><![CDATA[
				var c = this.PAGE.countPages().toString().length - 1;
				var s = "";
				for (var i = 0; i < c; i++)
					s += "_";
				s += part.key.charAt(0);
				this.setVariable("GOTO_VARIABLE", s);
				var container = this.container;
				container.beforeModal(container.GOTO_GROUP);
			]]></function>
		</code>
		<kbookPage id="PAGE" left="0" right="0" top="0" bottom="30" href="x-id://bookData">
			<code>
				<function id="doLeft">
					this.doPrevious();
				</function>
				<function id="doRight">
					this.doNext();
				</function>
				<function id="pageChanged">
					if (this.isShown()) {
						this.setVariable("BOOK_SIZE", this.getScale());
						this.setVariable("BOOK_HALF_PAGE", this.getHalfPage());
						var c = this.countPages();
						var i = this.componentPages();
						if (!c) c++;
						this.setVariable("BOOK_INDEX_COUNT", i + "fskin:/l/strings/STR_UI_PARTS_OF".idToString() + c);
					}
				</function>
			</code>
		</kbookPage>
		<kbookStatus skin="kbookPageStatus" left="0" right="0" height="30" bottom="0"/>
		<kbookIndicator skin="sizeIndicator" left="90" bottom="0" variable="BOOK_SIZE"/>
		<kbookIndicator skin="halfPageIndicator" left="120" height="30" bottom="0" variable="BOOK_HALF_PAGE"/>
		<kbookLabel left="150" right="150" height="30" bottom="0" align="center" variable="BOOK_INDEX_COUNT"/>
	</group>
	<group id="DELETE_BOOKMARK_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<code>
			<function id="doMark">
				this.bubble("doDeleteBookMark");
			</function>
			<function id="doMenu">
				this.bubble("doClearBookMarkDialog");
			</function>
			<function id="doRoot">
				this.bubble("doRootClearBookMarkDialog");
			</function>
		</code>
		<panel skin="kbookDeleteBook" left="0" right="0" top="0" bottom="0"/>
		<sprite skin="delete-bookmarks" left="0" width="70" top="0" height="70" active="false"/>
		<kbookLabel skin="title" left="70" right="0" top="0" height="70" align="left" textresource="STR_NODE_TITLE_REMOVEBOOKMARK"/>
		<group id="DELETE_BOOKMARK" width="460" height="422">
			<sprite skin="diskSprite" width="160" top="0" height="150" u="15" active="false"/>
			<kbookTextWithIcon active="false" left="0" right="0" top="150" height="125" valueresource="STR_UI_MESSAGE_REMOVEBOOKMARKSOPERATION" replaceidentifier="XXMARKXX" u="0"/>
			<kbookText skin="textSubmessage" left="0" right="0" top="315" height="147" valueresource="STR_UI_MESSAGE_NOTE_BOOKMARKOPERATION" />
		</group>
		<kbookStatus skin="kbookPageStatus" left="0" right="0" height="30" bottom="0"/>
	</group>
	
	<group id="GOTO_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<code>
			<function id="doDigit" params="part"><![CDATA[
				var s = this.getVariable("GOTO_VARIABLE");
				if (s.charAt(0) == "_") {
					s = s.slice(1) + part.key.charAt(0);
				}
				else {
					var c = s.length - 1;
					var s = "";
					for (var i = 0; i < c; i++)
						s += "_";
					s += part.key.charAt(0);
				}
				this.setVariable("GOTO_VARIABLE", s);
			]]></function>
			<function id="doCenter">
				var s = this.getVariable("GOTO_VARIABLE");
				s = s.replace(/_/g, "");
				this.container.afterModal(this);
				this.container.PAGE_GROUP.PAGE.bubble("doGoto", s);
			</function>
			<function id="doLeft"><![CDATA[
				var s = this.getVariable("GOTO_VARIABLE");
				var c = s.length;
				s = "_" + s;
				s = s.slice(0, c);
				this.setVariable("GOTO_VARIABLE", s);
			]]></function>
			<function id="doMenu"><![CDATA[
				this.container.afterModal(this);
			]]></function>
			<function id="doMarkMenu">
				this.bubble("doBlink");
			</function>
			<function id="doRoot">
				this.bubble("doBlink");
			</function>
		</code>
		<background skin="diskBackground" left="0" right="0" top="0" bottom="30"/>
		<group width="140" height="140">
			<sprite skin="diskSprite" u="127" left="0" right="0" top="0" bottom="0"  active="false"/>
			<kbookLabel skin="message" left="0" right="0" top="30" height="40" align="center" textresource="STR_UI_GOTOPAGE"/>
			<kbookLabel skin="message" left="-2" right="0" height="50" bottom="20" align="center" variable="GOTO_VARIABLE"/> <!-- temporary fix of #79 -->
		</group>
	</group>
	
	<group id="PICTURE_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<kbookImage id="PICTURE" left="0" right="0" top="0" bottom="33" active="true" href="x-id://imageData">
			<code>
				<function id="doFirst">
					this.bubble("doGotoFirstPicture");
				</function>
				<function id="doLast">
					this.bubble("doGotoLastPicture");
				</function>
				<function id="doNext">
					this.bubble("doGotoNextPicture");
				</function>
				<function id="doPrevious">
					this.bubble("doGotoPreviousPicture");
				</function>
			</code>
		</kbookImage>
		<kbookStatus left="0" right="0" height="33" bottom="0"/>
		<kbookIndicator skin="sizeIndicator" left="90" bottom="0" variable="PICTURE_SIZE"/>
		<kbookLabel left="150" right="150" height="30" bottom="0" align="center" variable="PICTURE_INDEX_COUNT"/>
	</group>
	
	<group id="SETTING_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<kbookSetting id="SETTING" left="0" right="0" top="0" bottom="30" href="x-id://settingData">
		</kbookSetting>
		<kbookStatus left="0" right="0" height="33" bottom="0"/>
		<kbookLabel left="150" right="150" height="30" bottom="0" align="center" textresource="STR_UI_MESSAGE_SINGLEPAGE"/>
	</group>
	
	<group id="COLD_BOOT_WIZARD_GROUP" left="0" right="0" top="0" bottom="0" visible="false" href="x-id://coldBootWizardModel">
		<code>
			<function id="doRotate">
				// disable orientation change during cold boot wizard
				// Fix Snowboard #204
				this.bubble("doBlink");
			</function>
			<function id="onModal">
				if(this.getVariable("IS_COLDBOOT")== false)
					this.bubble("DoNotShow")
				else
					this.bubble("nextPage")
			</function>
			<function id="onOK">
				this.bubble("nextPage")
			</function>
			<function id="hideall">
				var pageNum = 1
				var page
				while (page = this["PAGE" + pageNum]) {
					page.show(false)
					page.focus(false)
					pageNum++
				}
			</function>
			<function id="showPage" params="pageNum">
				this.hideall()
				if (pageNum == undefined)
					pageNum = this.getModel().getVariable("PAGE_NUM")
				var page = this["PAGE" + pageNum]
				page.show(true)
				page.focus(true)
			</function>
		<function id="doMenu">
				this.bubble("previousPage")
			</function>
		</code>
		<panel id="PAGE1" skin="kbookDeleteBook" left="0" right="0" top="0" bottom="0">
			<code>
				<function id="doCenter">
					this.bubble("onOK")
				</function>
			</code>
			<kbookLabel skin="title" left="0" right="0" top="0" height="70" align="center" textresource="STR_NODE_TITLE_WELCOME"/>
			<kbookText skin="welcomeText" active="false" left="20" right="20" top="124" height="700" variable="WELCOME_MSG" />
			<panel skin="welcomeButton" width="70"  top="660" height="50">
				<kbookLabel left="0" right="0" top="8" height="24" align="center" text="OK"/>
			</panel>
		</panel>
	    <kbookSetting id="PAGE2" left="0" right="0" top="0" bottom="30" href="x-id://coldBootWizardSettingData1"/>
		<kbookSetting id="PAGE3" left="0" right="0" top="0" bottom="30" href="x-id://coldBootWizardSettingData2"/>
		<kbookStatus left="0" right="0" height="33" bottom="0"/>
		<kbookLabel left="150" right="150" height="30" bottom="0" align="center" textresource="STR_UI_MESSAGE_SINGLEPAGE"/>
	</group>
	
	
	<group id="SONG_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<panel skin="kbookSong" left="0" right="0" top="0" bottom="0"/>
		<checkbox skin="play" left="0" width="70" top="0" height="70" variable="CONTROL" on="1" off="0"/>
		<kbookLabel skin="title" left="70" right="0" top="0" height="70" align="left" textresource="STR_NODE_TITLE_NOWPLAYING"/>
		<movie id="SONG" left="0" width="0" top="0" height="0" volume="1" href="x-id://movieData">
			<code>
				<function id="doCenter">
					var document = this.getDocument();
					if (this.isPlaying()) {
						this.stop();
						document.control = 0;
					}
					else {
						this.start();
						document.control = 1;
					}
					document.volumeVisibilityChanged();
				</function>
				<function id="doLeft"><![CDATA[
					var duration = this.getDuration();
					var oldTime = this.getTime();
					var newTime = oldTime - ((10 * duration) / 100);
					if (newTime < 0)
						newTime = 0;
					if (newTime != oldTime)
						this.setTime(newTime);
					else
						this.getModel().doLeft();
				]]></function>
				<function id="doFirst">
					this.bubble("doGotoFirstSong");
				</function>
				<function id="doLast">
					this.bubble("doGotoLastSong");
				</function>
				<function id="doNext">
					this.bubble("doGotoNextSong");
				</function>
				<function id="doPrevious">
					this.bubble("doGotoPreviousSong");
				</function>
				<function id="doRight"><![CDATA[
					var duration = this.getDuration();
					var oldTime = this.getTime();
					var newTime = oldTime + ((10 * duration) / 100);
					if (newTime > duration)
						newTime = duration;
					if (newTime != oldTime)
						this.setTime(newTime);
					else
						this.getModel().doLeft();
				]]></function>
				<function id="finished">
					this.bubble("doGotoNextSong");
				</function>
			</code>
		</movie>
		<image left="50" right="50" top="100" bottom="200" href="x-id://artData"/>
		<kbookLabel left="0" right="0" height="35" bottom="150" align="center" variable="SONG"/>
		<kbookLabel left="0" right="0" height="35" bottom="115" align="center" variable="ARTIST"/>
		<kbookLabel left="0" right="0" height="35" bottom="80" align="center" variable="ALBUM"/>
		<kbookLabel skin="time" align="center" left="10" width="140" height="40" bottom="40" variable="SONG_TIME"/>
		<slider skin="slider2" axis="x" left="150" right="150" bottom="50" variable="SEEK"/>
		<kbookLabel skin="time" align="center" width="140" right="10" height="40" bottom="40" variable="SONG_REST"/>
		<kbookLabel left="150" right="150" height="30" bottom="0" align="center" variable="SONG_INDEX_COUNT"/>
	</group>
	
	<group id="AUTORUN_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<kbookView id="AUTORUN" href="" left="0" right="0" top="0" bottom="0"/>
	</group>
	
	<group id="SOFT_RESET_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<panel skin="kbookReset" left="0" right="0" top="0" bottom="0"/>
		<sprite skin="soft-reset" left="0" width="70" top="0" height="70" active="false"/>
		<kbookLabel skin="title" left="70" right="0" top="0" height="70" align="left" textresource="STR_NODE_TITLE_RESTOREDEFAULTS"/>
		<group id="SOFT_RESET" width="480" height="240">
			<code>
				<function id="doMark">
					this.bubble("doSoftReset");
				</function>
			</code>
			<sprite skin="diskSprite" width="140" top="0" height="140" u="9" active="false"/>
			<kbookTextWithIcon active="false" left="0" right="0" top="140" height="300" valueresource="STR_UI_MESSAGE_RESTOREDEFAULTSOPERATION" replaceidentifier="XXMARKXX" u="0"/>
		</group>
	</group>

	<group id="DEMO_MODE_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<panel skin="kbookDemoMode" left="0" right="0" top="0" bottom="0"/>
		<kbookIcon skin="demoSprite" left="0" width="70" top="0" height="70" variable ="DEMO_KIND" />
		<kbookLabel skin="title" left="70" right="0" top="0" height="70" align="left" variable ="DEMO_TITLE" />
		<group id="DEMO_MODE" width="480" height="240">
			<sprite skin="diskSprite" width="140" top="0" height="140" u="6" active="false"/>
			<kbookTextWithIcon active="false" left="0" right="0" top="140" height="300" valueresource="STR_DEMO_NOTAVAILABLE" replaceidentifier="XXRETURNXX" u="1"/>
		</group>
		<kbookStatus skin="kbookPageStatus" left="0" right="0" height="30" bottom="0"/>
	</group>

	<group id="DEMO_PICTURE_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<kbookImageDemo id="DEMO_PICTURE" left="0" right="0" top="0" bottom="0" active="true" href="x-id://DemoImageData"/>
	</group>

	<group id="FORMAT_DEVICE_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<panel skin="kbookFormatFlash" left="0" right="0" top="0" bottom="0"/>
		<sprite skin="format-flash" left="0" width="70" top="0" height="70" active="false"/>
		<kbookLabel skin="title" left="70" right="0" top="0" height="70" align="left" textresource="STR_NODE_TITLE_FORMATINTERNALMEMORY"/>
		<group id="FORMAT_DEVICE" width="480" height="320">
			<code>
				<function id="doMark">
					this.bubble("doFormatFlash");
				</function>
			</code>
			<sprite skin="diskSprite" width="140" top="0" height="140" u="11" active="false"/>
			<kbookTextWithIcon active="false" left="0" right="0" top="140" height="300" valueresource="STR_UI_MESSAGE_FORMATOPERATION" replaceidentifier="XXMARKXX" u="0"/>
			<kbookText skin="textSubmessage" active="false" left="0" right="0" top="340" height="70" valueresource="STR_UI_MESSAGE_NOTE_DELETE_ALL_CONTENTS"/>
		</group>
	</group>

	<group id="REMOVE_ALL_BOOKMARKS_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<panel skin="kbookDeleteBook" left="0" right="0" top="0" bottom="0"/>
		<sprite skin="remove-allbookmarks" left="0" width="70" top="0" height="70" active="false"/>
		<kbookLabel skin="title" left="70" right="0" top="0" height="70" align="left" textresource="STR_NODE_TITLE_REMOVEALLBOOKMARKS"/>
		<group id="REMOVE_ALL_BOOKMARKS" width="480" height="240">
			<code>
				<function id="doMark">
					this.bubble("doRemoveAllBookmarks");
				</function>
			</code>
			<sprite skin="diskSprite" width="140" top="0" height="140" u="14" active="false"/>
			<kbookTextWithIcon active="false" left="0" right="0" top="140" height="300" valueresource="STR_UI_MESSAGE_REMOVEALLBOOKMARKSOPERATION" replaceidentifier="XXMARKXX" u="0"/>
		</group>
	</group>

	<group id="CLEAR_HISTORY_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<panel skin="kbookDeleteBook" left="0" right="0" top="0" bottom="0"/>
		<sprite skin="clear-history" left="0" width="70" top="0" height="70" active="false"/>
		<kbookLabel skin="title" left="70" right="0" top="0" height="70" align="left" textresource="STR_NODE_TITLE_CLEARHISTORY"/>
		<group id="CLEAR_HISTORY" width="480" height="240">
			<code>
				<function id="doMark">
					this.bubble("doClearHistory");
				</function>
			</code>
			<sprite skin="diskSprite" width="140" top="0" height="140" u="13" active="false"/>
			<kbookTextWithIcon active="false" left="0" right="0" top="140" height="300" valueresource="STR_UI_MESSAGE_CLEARHISTORYOPERATION" replaceidentifier="XXMARKXX" u="0"/>
		</group>
	</group>
	
	<group id="DELETE_BOOK_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<panel skin="kbookDeleteBook" left="0" right="0" top="0" bottom="0"/>
		<sprite skin="delete-book" left="0" width="70" top="0" height="70" active="false"/>
		<kbookLabel skin="title" left="70" right="0" top="0" height="70" align="left" textresource="STR_NODE_TITLE_DELETEBOOK"/>
		<group id="DELETE_BOOK" width="480" height="240">
			<code>
				<function id="doMark">
					this.bubble("doDeleteBook");
				</function>
			</code>
			<sprite skin="diskSprite" width="140" top="0" height="140" u="13" active="false"/>
			<kbookTextWithIcon active="false" left="0" right="0" top="140" height="250" valueresource="STR_UI_MESSAGE_DELETEBOOKOPERATION" replaceidentifier="XXMARKXX" u="0"/>
			<image left="10" top="280" width="51" height="68" href="x-id://bookCoverData"/>
			<kbookLabel skin="submessage" left="75" right="0" top="290" height="50" align="left" variable="DELETEBOOK_MSG"/>
		</group>
	</group>

	<group id="DELETE_BOOK_GROUP_ERR" left="0" right="0" top="0" bottom="0" visible="false">
		<panel skin="kbookDeleteBook" left="0" right="0" top="0" bottom="0"/>
		<sprite skin="delete-book" left="0" width="70" top="0" height="70" active="false"/>
		<kbookLabel skin="title" left="70" right="0" top="0" height="70" align="left" textresource="STR_NODE_TITLE_DELETEBOOK"/>
		<group id="DELETE_BOOK_ERR" width="480" height="240">
			<sprite skin="diskSprite" width="140" top="0" height="140" u="6" active="false"/>
			<kbookText active="false" left="0" right="0" top="140" height="300" valueresource="STR_UI_MESSAGE_CANNOTDELETEBOOK" />
		</group>
	</group>
	
	<group id="DEVICE_SHUTDOWN_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<panel skin="kbookDeviceShutdown" left="0" right="0" top="0" bottom="0"/>
		<sprite skin="device-shutdown" left="0" width="70" top="0" height="70" active="false"/>
		<kbookLabel skin="title" left="70" right="0" top="0" height="70" align="left" textresource="STR_NODE_TITLE_DEVICESHUTDOWN"/>
		<group id="DEVICE_SHUTDOWN" width="480" height="240">
			<code>
				<function id="doMark">
					this.bubble("doDeviceShutdown");
				</function>
			</code>
			<sprite skin="diskSprite" width="140" top="0" height="140" u="12" active="false"/>
			<kbookTextWithIcon active="false" left="0" right="0" top="140" height="300" valueresource="STR_UI_MESSAGE_SHUTDOWNOPERATION" replaceidentifier="XXMARKXX" u="0"/>
		</group>
	</group>

	<group id="HARD_RESET_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<panel skin="kbookReset" left="0" right="0" top="0" bottom="0"/>
		<sprite skin="hard-reset" left="0" width="70" top="0" height="70" active="false"/>
		<kbookLabel skin="title" left="70" right="0" top="0" height="70" align="left" textresource="STR_UI_MESSAGE_HARDRESET"/>
		<group id="HARD_RESET" width="520" height="440">
			<code>
				<function id="doDigit" params="part"> 
					var keyCode = part.key.charCodeAt(0);
					if (keyCode == 53) /* 5 */
						this.bubble("doHardReset");
					else
						this.getModel().doDigit(part);
				</function>
				<function id="doMenu">
					this.bubble("doNoHardReset");
				</function>
			</code>
			<sprite skin="diskSprite" width="140" top="0" height="140" u="6" active="false" canFocus="true"/>
			<kbookTextWithIcon active="false" left="0" right="0" top="140" height="400" valueresource="STR_UI_MESSAGE_HARDRESETOPERATION" replaceidentifier="XXRETURNXX" u="1"/>
		</group>
	</group>
	
	<group id="LOW_BATTERY_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<code>
			<function id="doCenter">
				this.setVariable("LOW_BATTERY", 0);
			</function>
			<function id="doMarkMenu">
				this.bubble("doBlink");
			</function>
			<function id="doMenu">
				this.bubble("doBlink");
			</function>
			<function id="doRoot">
				this.bubble("doBlink");
			</function>
		</code>
		<background skin="diskBackground" left="0" right="0" top="0" bottom="0"/>
		<sprite skin="diskSprite" width="140" height="140" u="5" active="false"/>
		<kbookStatus left="0" right="0" height="33" bottom="0"/>
		<kbookLabel left="150" right="150" height="30" bottom="0" align="center" textresource="STR_UI_MESSAGE_LOWBATTERY"/>
	</group>
	
	<group id="SHUTDOWN_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<background skin="diskBackground" left="0" right="0" top="0" bottom="0"/>
		<sprite skin="diskSprite" width="140" height="140" u="6" active="false"/>
		<kbookStatus left="0" right="0" height="33" bottom="0"/>
		<kbookLabel left="100" right="100" height="30" bottom="0" align="center" variable="SHUTDOWN_MSG"/>
	</group>
	
	<group id="DISK_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<code>
			<function id="doMarkMenu">
				this.bubble("doBlink");
			</function>
			<function id="doMenu">
				this.bubble("doBlink");
			</function>
			<function id="doRoot">
				this.bubble("doBlink");
			</function>
		</code>
		<background skin="diskBackground" left="0" right="0" top="0" bottom="0"/>
		<sprite id="WAIT" skin="diskSprite" width="144" height="140" active="false"> <!-- temporary fix of #8 -->
			<animation id="WAIT" duration="3" loop="true">
				<frames>
					<frame>
						<setU u="0"/>
					</frame>
					<frame>
						<setU u="1"/>
					</frame>
					<frame>
						<setU u="2"/>
					</frame>
					<frame>
						<setU u="3"/>
					</frame>
				</frames>
			</animation>
		</sprite>
		<kbookStatus left="0" right="0" height="33" bottom="0"/>
		<kbookLabel left="150" right="150" height="30" bottom="0" align="center" textresource="STR_UI_MESSAGE_LOADING"/>
	</group>
	
	<group id="FORMAT_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<background skin="diskBackground" left="0" right="0" top="0" bottom="0"/>
		<sprite id="FORMAT" skin="diskSprite" width="144" height="140" active="false"> 
		</sprite>
		<kbookStatus left="0" right="0" height="33" bottom="0"/>
		<kbookLabel left="150" right="150" height="30" bottom="0" align="center" textresource="STR_UI_MESSAGE_FORMATTING"/>
	</group>
	
	<!-- This group is identical to FORMAT_GROUP in all but name, and they can eventually be collapsed into
		one.  However, for now I'm keeping them separate in case we want to change the text of the label
		in this group later. -->
	<group id="PROGRESS_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<background skin="diskBackground" left="0" right="0" top="0" bottom="0"/>
		<sprite id="PROGRESS" skin="diskSprite" width="144" height="140" active="false"> 
		</sprite>
		<kbookStatus left="0" right="0" height="33" bottom="0"/>
		<kbookLabel left="150" right="150" height="30" bottom="0" align="center" textresource="STR_UI_MESSAGE_FORMATTING"/>
	</group>
	
	<group id="STATUS_GROUP" left="0" right="0" top="0" bottom="0">
		<kbookProgress skin="batteryProgress" left="0" width="70" height="30" bottom="0" variable="BATTERY"/>
		<checkbox skin="batteryCheckBox" left="70" width="20" height="30" bottom="0" variable="POWER" on="1" off="0"/>
		<checkbox skin="blinkCheckBox" width="30" right="90" height="30" bottom="0" variable="BLINK" on="1" off="0"/>
		<group id="VOLUME_GROUP" width="75" right="0" height="30" bottom="0" visible="false">
			<checkbox id="MUTE" skin="volumeCheckBox" width="20" right="55" height="30" bottom="0" variable="MUTE" on="1" off="0"/>
			<kbookProgress id="VOLUME" skin="volumeProgress" width="55" right="0" height="30" bottom="0" variable="VOLUME"/>
		</group>
		<!-- PRS+ stuff -->
		<kbookLabel id="prspTime" align="right" right="5" bottom="0" height="30" width="120" />
		<!-- End of PRS+ stuff -->
	</group>
	
	<!-- PRS+ stuff -->
	<panel id="POPUP_MENU"  skin="popup" left="50" bottom="50" width="0" height="0"  visible="false">
		<group id="innerGroup" left="6" right="6" top="6" bottom = "6">
			<group id="panel10" left="0" right="0" height="1" bottom="1" >
				<kbookText id="menu" skin="popupText" left="0" right="35" top="0" bottom="0" />
				<kbookText id="indicator" skin="popupIndicator" right="0" top="0" bottom="0" width="35" value="0" />
			</group>
			<group id="panel9" left="0" right="0" height="1" bottom="1" >
				<kbookText id="menu" skin="popupText" left="0" right="35" top="0" bottom="0" />
				<kbookText id="indicator" skin="popupIndicator" right="0" top="0" bottom="0" width="35" value="9" />
			</group>
			<group id="panel8" left="0" right="0" height="1" bottom="1" >
				<kbookText id="menu" skin="popupText" left="0" right="35" top="0" bottom="0" />
				<kbookText id="indicator" skin="popupIndicator" right="0" top="0" bottom="0" width="35" value="8" />
			</group>
			<group id="panel7" left="0" right="0" height="1" bottom="1" >
				<kbookText id="menu" skin="popupText" left="0" right="35" top="0" bottom="0" />
				<kbookText id="indicator" skin="popupIndicator" right="0" top="0" bottom="0" width="35" value="7" />
			</group>
			<group id="panel6" left="0" right="0" height="1" bottom="1" >
				<kbookText id="menu" skin="popupText" left="0" right="35" top="0" bottom="0" />
				<kbookText id="indicator" skin="popupIndicator" right="0" top="0" bottom="0" width="35" value="6" />
			</group>
			<group id="panel5" left="0" right="0" height="1" bottom="1" >
				<kbookText id="menu" skin="popupText" left="0" right="35" top="0" bottom="0" />
				<kbookText id="indicator" skin="popupIndicator" right="0" top="0" bottom="0" width="35" value="5" />
			</group>
			<group id="panel4" left="0" right="0" height="1" bottom="1" >
				<kbookText id="menu" skin="popupText" left="0" right="35" top="0" bottom="0" />
				<kbookText id="indicator" skin="popupIndicator" right="0" top="0" bottom="0" width="35" value="4" />
			</group>
			<group id="panel3" left="0" right="0" height="1" bottom="1" >
				<kbookText id="menu" skin="popupText" left="0" right="35" top="0" bottom="0" />
				<kbookText id="indicator" skin="popupIndicator" right="0" top="0" bottom="0" width="35" value="3" />
			</group>
			<group id="panel2" left="0" right="0" height="1" bottom="1" >
				<kbookText id="menu" skin="popupText" left="0" right="35" top="0" bottom="0" />
				<kbookText id="indicator" skin="popupIndicator" right="0" top="0" bottom="0" width="35" value="2" />
			</group>
			<group id="panel1" left="0" right="0" height="1" bottom="1" >
				<kbookText id="menu" skin="popupText" left="0" right="35" top="0" bottom="0" />
				<kbookText id="indicator" skin="popupIndicator" right="0" top="0" bottom="0" width="35" value="1" />
			</group>
		</group>
	</panel>
	<!-- End of PRS+ stuff -->

	<group id="INVALID_FORMAT_GROUP" left="0" right="0" top="0" bottom="0" visible="false">
		<code>
			<function id="doCenter">
				this.setVariable("INVALID_FORMAT", 0);
				this.bubble("doGotoFormatDevice");
			</function>
			<function id="doMarkMenu">
				this.bubble("doBlink");
			</function>
			<function id="doMenu">
				this.bubble("doBlink");
			</function>
			<function id="doRoot">
				this.bubble("doBlink");
			</function>
		</code>
		<background skin="diskBackground" left="0" right="0" top="0" bottom="0"/>
		<sprite skin="diskSprite" width="140" height="140" u="5" active="false"/>
		<kbookStatus left="0" right="0" height="33" bottom="0"/>
		<kbookLabel left="150" right="150" height="30" bottom="0" align="center" textresource="STR_UI_MESSAGE_INVALIDFORMAT"/>
	</group>
	
	<group id="STANDBY_IMAGE" left="0" right="0" top="0" bottom="0" active="false" visible="false"/>
</document>
